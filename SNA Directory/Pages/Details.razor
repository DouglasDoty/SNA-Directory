@page "/Details/{Id}"
@using SNA_Directory.Components
@inject IAreaData areaData
@inject IJSRuntime JS
@inject NavigationManager navManager
<div class="d-flex justify-content-end">
    <span class=" oi oi-x" @onclick="(()=>ClosePage())"></span>
</div>


@if (_area is not null)
{
    <div>
        <div class="row p-2">
            <div class="col-1">
                <img src="@GetSNAMap()" height="55">
            </div>
            <h2 class="col-11 col-md-8">SNA Name: @_area.Name</h2>
        </div>
        <div>Biome(Province): @_area.Biome</div>
        <div>Landscape: @_area.Landscape</div>
        <div class="row image-buttons">
        </div>
        <div class="row">
            <div class="col-8">
                <SNAImageCarousel Area="@_area"/>
             </div>

            <div class="col-4">
                <div class=" new-comment p-0 mx-2">
                    <CommentEditor Area="@_area" CommentCompleted="@HandleCommentCompleted" />
                </div>
                <CommentList @ref="TheCommentList" Area="@_area" />
            </div>
        </div>

    </div>
}

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;

    private AreaModel _area = new() { DNRId = 0 };
    private CommentList? TheCommentList { get; set; }

    protected async override Task OnInitializedAsync()
    {
        _area = await areaData.GetAreaAsync(Id);
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("setBackgroundUrl", "../images/LgtGreen.png");
        }
    }

    private string GetSNAMap()
    {
        var result = $"https://maps1.dnr.state.mn.us/cgi-bin/locator.cgi?id=sna{_area.DNRId.ToString("00000")}&type=sna&style=wolf";
        return result;
    }

    private async Task HandleCommentCompleted(CommentModel comment)
    {
        if (TheCommentList is not null)
        {
            await TheCommentList.SaveNewComment(comment);
        }
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }
}
